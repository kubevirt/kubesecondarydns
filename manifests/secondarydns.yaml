---
apiVersion: v1
kind: Namespace
metadata:
  name: secondary
---
apiVersion: v1
data:
  DOMAIN: ""
  NAME_SERVER_IP: ""
  Corefile: |
    .:5353 {
        auto {
          directory /zones db\.(.*) {1}
          reload 45s
        }
        reload
        log
        health :8082
        ready :8083
    }
kind: ConfigMap
metadata:
  name: secondary-dns
  namespace: secondary
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secondary
rules:
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachineinstances
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secondary
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secondary
subjects:
- kind: ServiceAccount
  name: secondary
  namespace: secondary
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: secondary
  namespace: secondary
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: secondary-dns
  name: secondary-dns
  namespace: secondary
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: secondary-dns
  template:
    metadata:
      labels:
        k8s-app: secondary-dns
      annotations:
        kubectl.kubernetes.io/default-container: status-monitor
    spec:
      serviceAccountName: secondary
      securityContext:
        runAsUser: 107
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.10.1
        imagePullPolicy: IfNotPresent
        name: secondary-dns
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 8082
          name: healthport
          protocol: TCP
        - containerPort: 8083
          name: readyport
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 70Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
          readOnly: true
        - name: secdns-zones
          mountPath: /zones
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        readinessProbe:
          httpGet:
            path: /ready
            port: readyport
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: healthport
          initialDelaySeconds: 15
          periodSeconds: 20
      - name: status-monitor
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
        image: registry:5000/kubevirt/kubesecondarydns:latest
        resources:
          requests:
            cpu: 100m
            memory: 70Mi
        ports:
        - containerPort: 8081
          name: healthport
          protocol: TCP
        volumeMounts:
        - name: secdns-zones
          mountPath: /zones
        env:
          - name: DOMAIN
            valueFrom:
              configMapKeyRef:
                name: secondary-dns
                key: DOMAIN
          - name: NAME_SERVER_IP
            valueFrom:
              configMapKeyRef:
                name: secondary-dns
                key: NAME_SERVER_IP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthport
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthport
          initialDelaySeconds: 15
          periodSeconds: 20
        terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 1
      volumes:
      - name: config-volume
        configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: secondary-dns
      - name: secdns-zones
        emptyDir: {}
